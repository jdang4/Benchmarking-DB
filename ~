#include <iostream>
#include "include/redis-plus-plus/src/sw/redis++/redis++.h"
#include <stdint.h>

#define ENTRY_SIZE 6000
#define NUM_OF_ENTRIES 1000000

using namespace sw::redis;
using namespace std;

int main() 
{
    ConnectionOptions connection_options;
    connection_options.host = "redis";
    connection_options.port = 6379;
    connection_options.db = 0;

    try {
	cout << "Connecting to " << connection_options.host << ":" << connection_options.port << " at DB " << connection_options.db << endl;

	Redis redis(connection_options);

	redis.command<void>("flushall");

	char entryVal[ENTRY_SIZE] = "";
	int letter = int('a');

	for (int i = 0; i < ENTRY_SIZE; i++)
	{
	    if (i != 0 && i % 235 == 0)
	    {
		letter++;
	    }
	    
	    char cLetter = char(letter);

	    const char* strLetter = &cLetter;
	    strncat(entryVal, strLetter, 1);
	}

	redis.set("entry1", entryVal);

	auto val = redis.get("entry1");

	if (val)
	{
	    cout << *val << endl;
	}
    }
    catch (const Error &e) {
	    cout << "FAILED!" << endl;
    }
}
